"use strict";(self.webpackChunkpodman=self.webpackChunkpodman||[]).push([[91024],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=p(n),d=o,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[h]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={title:"Podman Checkpoint"},a="Checkpointing",c={unversionedId:"checkpoint",id:"checkpoint",title:"Podman Checkpoint",description:"Checkpoints currently work with root containers only. Therefore, you have to",source:"@site/docs/checkpoint.md",sourceDirName:".",slug:"/checkpoint",permalink:"/docs/checkpoint",draft:!1,editUrl:"https://github.com/containers/podman.io/tree/main/docs/checkpoint.md",tags:[],version:"current",frontMatter:{title:"Podman Checkpoint"},sidebar:"docsSidebar",previous:{title:"Podman Installation",permalink:"/docs/installation"}},s={},p=[{value:"Checkpointing the container",id:"checkpointing-the-container",level:2},{value:"Restoring the container",id:"restoring-the-container",level:2},{value:"Migrating the container",id:"migrating-the-container",level:2}],l={toc:p},h="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"checkpointing"},"Checkpointing"),(0,o.kt)("p",null,"Checkpoints currently work with root containers only. Therefore, you have to\nrun the example container as root. Instead of prefixing each command with\n",(0,o.kt)("inlineCode",{parentName:"p"},"sudo"),", you can also switch to the root user beforehand via ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo -i"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo podman run -dt -p 8080:80/tcp docker.io/library/httpd\nsudo podman ps\n")),(0,o.kt)("h2",{id:"checkpointing-the-container"},"Checkpointing the container"),(0,o.kt)("p",null,"Checkpointing a container stops the container while writing the state of all\nprocesses in the container to disk. With this a container can later be restored\nand continue running at exactly the same point in time as the checkpoint.\nThis capability requires ",(0,o.kt)("a",{parentName:"p",href:"https://www.criu.org/"},"CRIU 3.11")," or later installed\non the system."),(0,o.kt)("p",null,"To checkpoint the container use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo podman container checkpoint <container_id>\n")),(0,o.kt)("h2",{id:"restoring-the-container"},"Restoring the container"),(0,o.kt)("p",null,"Restoring a container is only possible from a previously checkpointed container.\nThe restored container will continue to run at exactly the same point in time it\nwas checkpointed."),(0,o.kt)("p",null,"To restore the container use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo podman container restore <container_id>\n")),(0,o.kt)("p",null,"After being restored, the container will answer requests again as it did before\ncheckpointing."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://<IP_address>:8080\n")),(0,o.kt)("h2",{id:"migrating-the-container"},"Migrating the container"),(0,o.kt)("p",null,"To live migrate a container from one host to another the container is\ncheckpointed on the source system of the migration, transferred to the\ndestination system and then restored on the destination system. When\ntransferring the checkpoint, it is possible to specify an output-file."),(0,o.kt)("p",null,"On the source system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo podman container checkpoint <container_id> -e /tmp/checkpoint.tar.zst\nscp /tmp/checkpoint.tar.zst <destination_system>:/tmp\n")),(0,o.kt)("p",null,"On the destination system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo podman container restore -i /tmp/checkpoint.tar.zst\n")),(0,o.kt)("p",null,"After being restored, the container will answer requests again as it did before\ncheckpointing. This time the container will continue to run on the destination\nsystem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://<IP_address>:8080\n")))}u.isMDXComponent=!0}}]);